import pygame
import sys
from astar.search import AStar

pygame.init()
width, height = 1200, 700
screen = pygame.display.set_mode((width,height))
pygame.display.set_caption("Autonomous Ship Simulation")

#Colors
blue= (100, 190, 230)
red=(255, 0, 0)
green=(31,96,35)

#Ship
def make_ship(ship_width,ship_height,x,y,speed):
    ship=pygame.draw.rect(screen, red, (x,y, ship_width, ship_height))
    return ship

#ports
def make_port(radius,x,y):
    port=pygame.draw.circle(screen,red,(x,y),radius)
    return port

#background
land = pygame.image.load("earth 2.png").convert_alpha()
screenUpdate = pygame.transform.scale(land, (width,height))
mask= pygame.mask.from_surface(screenUpdate)
masksurface=mask.to_surface()
for row in range(1,row+1):
    for col in range(1, cols+1):
        pos=(row,col)
        binaryval= [[]for ]
        binaryval[[x,y]]= mask.get_at(pos)
    



#test pathfind
start=(0,0)
end=(1200,700)
path= AStar().search(start,end)
print(path)

        
#Update
screen.fill(blue)
screen.blit(screenUpdate,(0,0))
port=make_port(100,600,350)
ship=make_ship(10,7,300,200,5)
ship_mask= pygame.mask.Mask((10,7))
ship_mask.fill()
pygame.display.flip()

if mask.overlap(ship_mask,((300,200))):
    print("true")

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
            
      
